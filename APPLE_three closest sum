class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        int n = nums.size();
        int closestSum = nums[0] + nums[1] + nums[2];
        for (int i = 0; i < n - 2; i++) { // Ensure at least two numbers remain after `i`
            int j = i + 1;
            int k = n - 1;
            while (j < k) { // Use a `while` loop to iterate `j` and `k`
                int currSum = nums[i] + nums[j] + nums[k];
                if (abs(currSum - target) < abs(closestSum - target)) {
                    closestSum = currSum;
                }
                if (currSum < target) {
                    j++;
                } else if (currSum > target) {
                    k--;
                } else { 
                    return currSum; // If exactly equal to the target
                }
            }
        }
        return closestSum;
    }
};
