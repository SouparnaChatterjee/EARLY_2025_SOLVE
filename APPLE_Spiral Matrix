class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
    if(matrix.empty())   return {};
    vector<int> result;
    int m=matrix.size(); int n=matrix[0].size();
    vector<vector<bool>> vis(m,vector<bool>(n,false));
    vector<pair<int,int>> directions={{0,1},{1,0},{0,-1},{-1,0}};
    int dir=0; int x=0; int y=0;
    for(int i=0;i<m*n;i++)
    {
        result.push_back(matrix[x][y]);
        vis[x][y]=true;
        int nextX=x+directions[dir].first;
        int nextY=y+directions[dir].second;
        if(nextX<0 ||nextX>=m ||nextY<0||nextY>=n||vis[nextX][nextY])
    {
        dir=(dir+1)%4;
        nextX=x+directions[dir].first;
        nextY=y+directions[dir].second;
    }
    x=nextX;
    y=nextY;
    }
    return result;
    }
};
